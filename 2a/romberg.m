# This code is inspired by http://www.math.mcgill.ca/gantumur/math578f09/matlab/romberg.m# the algorithm follows http://www.math.usm.edu/lambers/mat460/fall09/lecture29.pdffunction [res, err, eff]=romberg(fun, a, b, n)  h = b-a;  r(1,1) = h*(feval(fun,a)+feval(fun,b))/2;  exp = 0;  eff = 2;  j = 2;  while flag < n    flag = 2^(exp+1);    exp = exp +1;    h = h/2;    sum = 0;    for i=1:2^(j-2)      sum = sum + feval(fun, a+(2*i-1)*h);      eff = eff + 1;    end    r(j,1) = (r(j-1,1)/2)+(h*sum);    for k = 2:j      r(j,k) = r(j,k-1) + (r(j,k-1)-r(j-1,k-1))/(4^(k-1)-1);    end    # update j naturally    if flag < n      j = j + 1;    endif  endwhile  res = r(j, j);  err = abs(res - r(j-1, j-1));  eff;end            